{% extends 'base.html.twig' %}

{% block title %}Estad칤sticas{% endblock %}

{% block body %}
<div class="container">
    <h2>Estad칤sticas de Reproducciones</h2>

    <!-- Gr치fico de Playlists M치s Reproducidas -->
    <h3>Playlists M치s Reproducidas</h3>
    <canvas id="reproduccionesChart"></canvas>

    <!-- Gr치fico de Playlists M치s Likeadas -->
    <h3>Playlists M치s Likeadas</h3>
    <canvas id="likesChart"></canvas>

    <!-- Gr치fico de Canciones M치s Reproducidas -->
    <h3>Canciones M치s Reproducidas</h3>
    <canvas id="songsReplaysChart"></canvas>

    <!-- Gr치fico de Edades de Usuarios -->
    <h3>Distribuci칩n de Edad de Usuarios</h3>
    <canvas id="userAgeChart"></canvas>

    <!-- Gr치fico de Reproducciones por Estilo de M칰sica -->
    <h3>Reproducciones por Estilo de M칰sica</h3>
    <canvas id="styleReplaysChart"></canvas>
</div>

<!-- Cargar Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
document.addEventListener("DOMContentLoaded", function () {
    fetch("{{ path('statistics_data') }}")
    .then(response => response.json())
    .then(data => {
        // 游댳 PLAYLISTS M츼S REPRODUCIDAS
        createChart(
            "reproduccionesChart",
            "bar",
            data.playlist_most_replays.map(item => item.Playlist),
            data.playlist_most_replays.map(item => item.Replays),
            "Total Reproducciones"
        );

        // 游댳 PLAYLISTS M츼S LIKEADAS
        createChart(
            "likesChart",
            "bar",
            data.playlist_most_likes.map(item => item.Playlist),
            data.playlist_most_likes.map(item => item.Likes),
            "Total Likes"
        );

        // 游댳 CANCIONES M츼S REPRODUCIDAS
        createChart(
            "songsReplaysChart",
            "bar",
            data.song_most_replays.map(item => item.Song),
            data.song_most_replays.map(item => item.Replays),
            "Total Reproducciones por Canci칩n"
        );

        // 游댳 EDADES DE USUARIOS
        createChart(
            "userAgeChart",
            "bar",
            data.obtainUserAgeData.map(item => item.Age),
            data.obtainUserAgeData.map(item => item.ageAmount), // Cantidad de usuarios por edad
            "Distribuci칩n de Edades"
        );

        // 游댳 REPRODUCCIONES POR ESTILO DE M칔SICA
        createChart(
            "styleReplaysChart",
            "bar",
            data.obtainSongsStyleMostReplayedData.map(item => item.Style),
            data.obtainSongsStyleMostReplayedData.map(item => item.StyleSongReplays),
            "Reproducciones por Estilo"
        );
    })
    .catch(error => console.error("Error cargando los datos:", error));
});

// 游댳 Funci칩n para crear gr치ficos de manera m치s sencilla
function createChart(canvasId, type, labels, values, label) {
    const ctx = document.getElementById(canvasId).getContext("2d");
    new Chart(ctx, {
        type: type,
        data: {
            labels: labels,
            datasets: [{
                label: label,
                data: values,
                backgroundColor: 'rgba(54, 162, 235, 0.5)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
}
</script>
<style>
    canvas {
        max-width: 400px; /* Ancho m치ximo */
        max-height: 300px; /* Alto m치ximo */
        margin: auto; /* Centrar */
        display: block; /* Evitar que se expanda */
    }
</style>
{% endblock %}
